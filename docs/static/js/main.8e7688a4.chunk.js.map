{"version":3,"sources":["components/AddCategory.js","helpers/GetGif.js","hooks/useFetchGif.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GetGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGif","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","GifGrid","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OACI,mCACA,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,UACI,iEACA,uBACIO,KAAK,OACLC,MAAST,EACTU,SAlBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,gB,+BCQhBG,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAC0CC,UAAUH,GADpD,+DAEOI,MAAMF,GAFb,cAENG,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YACrB,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAaLM,GAbK,4CAAH,sDC0BEO,EAvBK,SAACf,GAAc,IAAD,EAEJd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAJiB,mBAEvBC,EAFuB,KAEhBC,EAFgB,KAoB9B,OAbAC,qBAAU,WACNpB,EAAQC,GAAUoB,MAAM,SAAAC,GAAI,OACxBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAIlB,CAAEhB,IAKEiB,GCZIK,EATK,SAAC,GAAkB,IAAjBV,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACzB,OACI,sBAAKqB,UAAU,8CAAf,UACI,4BAAIX,IACJ,qBAAKY,IAAKtB,QCuBPuB,EAzBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,EAEAe,EAAYf,GAA9B0B,EAFkB,EAEvBnB,KAAYS,EAFW,EAEXA,QAKnB,OACI,qCACI,oBAAIO,UAAU,wCAAd,SAAuDvB,IACtDgB,GAAW,yFACZ,qBAAKO,UAAU,YAAf,SAEQG,EAAMjB,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCYtBgB,EA3BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,YAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAQvB,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8e7688a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cate => [inputValue, ...cate]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Ingrese un nombre a buscar: </label>\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputValue}\r\n            />\r\n        </form>\r\n        </>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;","const GetGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zP4ksM0T2nlA6A6h07Ieb13swCgvdgC5`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => (\r\n        {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    ))\r\n\r\n    return(gifs);\r\n}\r\n\r\nexport default GetGifs;","import {useEffect, useState} from 'react';\r\nimport GetGifs from '../helpers/GetGif';\r\n\r\nconst useFetchGif = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        GetGifs(category).then( imgs =>(\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        )\r\n        );\r\n    }, [ category ])\r\n\r\n\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGif;","import React from 'react';\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUpBig\">\r\n            <p>{title}</p>\r\n            <img src={url} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport useFetchGif from '../hooks/useFetchGif';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const {data:image, loading} = useFetchGif(category);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft\">{category}</h3>\r\n            {loading && <p>Cargando................................................</p>}\r\n            <div className=\"card-grid\">\r\n            {\r\n                    image.map( img  => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>   \r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Digimon']);\r\n\r\n    /*const handleAdd = () => {\r\n        setCategories( cate => [...cate, 'Naruto']);\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n        <ul>\r\n            {\r\n                categories.map( category => (\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}